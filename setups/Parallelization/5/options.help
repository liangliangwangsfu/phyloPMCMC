pcs.disableUnrooted            < bool> :  [true]
pcs.useExtendedLogLL           < bool> :  [false]
pcs.useStar                    < bool> :  [false]
pcs.useTemperature             < bool> :  [false]
PGSExperiments.resampleRoot    < bool> :  [false]
PGSExperiments.refMethod       < enum> :  [SMC4GTRIGamma] SMC4K2P|SMC4K2PBF|SMCNonClock4K2P|SMC4GTRIGammaBF|SMC4GTRIGamma|SMCNonClock4GTRIGamma|PGS4K2PBF|PGAS4K2PBF|PGS4K2P|MB|IPGS4K2P|IPGS4K2PBF|PG
PGSExperiments.nThousandIters  <  dbl> :  [1]
PGSExperiments.methods         <enum*> :  [SMC4K2PBF]
PGSExperiments.iterScalings    < dbl*> :  [10]
PGSExperiments.refIterScaling  <  int> :  [100]
PGSExperiments.repPerDataPt    <  int> :  [50]
PGSExperiments.pmcmcSMCExpMix  <  dbl> :  [0.6666666666666666]
PGSExperiments.treeRatePrior   <  dbl> :  [10.0]
PGSExperiments.mainRand        < rand> :  [50]
PGSExperiments.verbose         < bool> :  [false]
PGSExperiments.nThreads        <  int> :  [5]
PGSExperiments.maxNUniqueParticles <  int> :  [2147483647]
PGSExperiments.finalMaxNUniqueParticles <  int> :  [2147483647]
PGSExperiments.nParticlesEachStep <  int> :  [1000]
PGSExperiments.parameter_a     <  dbl> :  [1.2]
PGSExperiments.a_alpha         <  dbl> :  [1.5]
PGSExperiments.a_statFreqs     <  dbl> :  [100.0]
PGSExperiments.a_subsRates     <  dbl> :  [100.0]
PGSExperiments.a_pInv          <  dbl> :  [0.2]
PGSExperiments.pmmhPgsExpMix   <  dbl> :  [0.05]
PGSExperiments.burninPercent   <  dbl> :  [0.5]
PGSExperiments.sampleTreeEveryNIter <  int> :  [1]
PGSExperiments.RcommandDir     <  str> :  [/Users/oudomame/phyloPMCMC/]
PGSExperiments.useDataGenerator < bool> :  [true]
PGSExperiments.dataFile        <  unk> :  []
PGSExperiments.refTree         <  unk> :  []
PGSExperiments.dataDirName     <  str> :  [output]
PGSExperiments.sequenceType    < enum> :  [DNA] DNA|RNA|PROTEIN|PHONEMES|BINARY|REAL
PGSExperiments.isPMCMC4clock   < bool> :  [true]
PGSExperiments.useNJinfo       < bool> :  [false]
PGSExperiments.useTopologyProcessor < bool> :  [false]
PGSExperiments.saveTreesFromPMCMC < bool> :  [true]
PGSExperiments.nameOfAllTrees  <  str> :  [allTrees.trees]
PGSExperiments.csmc_trans2tranv <  dbl> :  [2.0]
PGSExperiments.smcmcmcMix      <  dbl> :  [0.5]
PGSExperiments.betterStartVal  < bool> :  [true]
PGSExperiments.nCSMC           <  int> :  [2]
PGSExperiments.nUCSMC          <  int> :  [2]
PGSExperiments.adaptiveTempDiff < bool> :  [false]
PGSExperiments.alphaSMCSampler <  dbl> :  [0.95]
PGSExperiments.essRatioThreshold <  dbl> :  [0.5]
PGSExperiments.sampleTrans2tranv < bool> :  [true]
PGSExperiments.resamplingStrategy < enum> :  [ESS] ALWAYS|NEVER|ESS
PGSExperiments.mbRate          <  dbl> :  [1.0]
PGSExperiments.setToK2P        < bool> :  [true]
log.maxIndLevel                <  int> : Maximum indent level. [10]
log.msPerLine                  <  int> : Maximum number of milliseconds between consecutive lines of output. [1000]
log.file                       <  str> : File to write log. [/Users/shijiawang/eclipse-workspace/PGS/state/execs/25.exec/log]
log.stdout                     < bool> : Whether to output to the console. [true]
log.note                       <  str> : Dummy placeholder for a comment []
log.forcePrint                 < bool> : Force printing from logs* [false]
log.maxPrintErrors             <  int> : Maximum number of errors (via error()) to print [10000]
gen.nTaxa                      <  int> :  [30]
gen.nReplica                   <  int> :  [1]
gen.treeRate                   <  dbl> :  [10]
gen.outputDirName              <  str> :  [output]
gen.len                        <  int> :  [1000]
gen.rand                       < rand> :  [11]
gen.useNonclock                < bool> :  [false]
gen.useSlightNonclock          < bool> :  [false]
gen.sdScale                    <  dbl> :  [0.2]
gen.useGutellData              < bool> :  [false]
gen.gutellLocation             <  unk> :  []
gen.useYule                    < bool> :  [false]
gen.useUnif                    < bool> :  [false]
gen.useFullGutellLocFile       < bool> :  [false]
gen.miniTest                   < bool> :  [false]
gen.q                          <  dbl> :  [0.5]
gen.useDataGen4GTRGammaI       < bool> :  [false]
gen.pInv                       <  dbl> :  [0.0]
gen.alpha                      <  dbl> :  [0.5]
gen.stationaryDistribution     <  unk> :  [[D@1e80bfe8]
gen.subsRates                  <  unk> :  [[D@66a29884]
gen.useSeqGen                  < bool> :  [false]
gen.seqGenPath                 <  str> :  [/Users/liangliang/software/Seq-Gen.v1.3.3/source/seq-gen]
gen.generateDNAdata            < bool> :  [true]
gen.useJC                      < bool> :  [false]
priorprior.printBranchLengthMagnitudes < bool> :  [false]
mb.mrBayesPath                 <  str> :  [/Users/shijiawang/Dropbox/phyloSoftware/mrbayes-3.2.7a/src//mb]
mb.nMCMCIters                  <  int> :  [10000]
mb.nChains                     <  int> :  [4]
mb.seed                        <  int> :  [1297732343]
mb.treePrior                   <  str> :  [clock:coalescence]
mb.mbRate                      <  dbl> :  [1.0]
mb.setToK2P                    < bool> :  [false]
mb.setFixCoalescentPr          < bool> :  [true]
mb.fixNucleotideFreq           < bool> :  [false]
mb.set2nst                     < bool> :  [false]
mb.setJC                       < bool> :  [false]
mb.setGTRGammaI                < bool> :  [false]
mb.setInv                      < bool> :  [false]
mb.fixGTRGammaPara             < bool> :  [false]
mb.alpha                       <  dbl> :  [0.5]
mb.stationaryDistribution      <  unk> :  [[D@4769b07b]
mb.subsRates                   <  unk> :  [[D@cc34f4d]
mb.mb_trans2tranv              <  dbl> :  [2.0]
mb.setstarttree                < bool> :  [false]
mb.fixtratioInMb               < bool> :  [true]
mb.useNNI                      < bool> :  [true]
mb.st                          < enum> :  [RNA] DNA|RNA|PROTEIN|PHONEMES|BINARY|REAL
mb.alignmentInputFile          <  unk> :  []
prior.multiplicativeBranchFactor <  dbl> :  [2.0]
nc.deltaProposalRate           <  dbl> :  [-1.0]
nc.useOptimal                  < bool> :  [false]
prop.multiplicativeBranchProposalScaling <  dbl> :  [2.0]
prop.useMultiplicativeBranchProposal < bool> :  [true]
prop.useGlobalMultiplicativeBranchProposal < bool> :  [true]
prop.useStochasticNearestNeighborInterchangeProposal < bool> :  [true]
prop.useStochasticNearestNeighborInterchangeProposalWithNbrsResampling < bool> :  [true]
prop.useSubtreePruningRegraftingProposal < bool> :  [true]
prop.useIndepBranchProp        < bool> :  [false]
nj.dnadistPath                 <  str> :  [dnadist]
nj.neighborPath                <  str> :  [/Users/shijiawang/Dropbox/phyloSoftware/phylip-3.695/exe//neighbor]
exec.disableSaveJar            < bool> :  [true]
exec.execName                  <  str> :  []
exec.create                    < bool> : Whether to create a directory for this run; if not, don't generate output files [true]
exec.monitor                   < bool> : Whether to create a thread to monitor the status. [true]
exec.execDir                   <  str> : Directory to put all output files; if blank, use execPoolDir. []
exec.execPoolDir               <  str> : Directory which contains all the executions (or symlinks). [/Users/shijiawang/eclipse-workspace/PGS/state/execs]
exec.actualExecPoolDir         <  str> : Directory which actually holds the executions. []
exec.overwriteExecDir          < bool> : Overwrite the contents of the execDir if it doesn't exist (e.g., when running a thunk). [false]
exec.useStandardExecPoolDirStrategy < bool> : Assume in the run directory, automatically set execPoolDir and actualExecPoolDir [true]
exec.printOptionsAndExit       < bool> : Simply print options and exit. [false]
exec.miscOptions               < str*> : Miscellaneous options (written to options.map and output.map, displayed in servlet); example: a=3 b=4 []
exec.addToView                 < str*> : Name of the view to add this execution to in the servlet []
exec.recordPath                <  str> : Record file to write to []
exec.charEncoding              <  str> : Character encoding []
exec.jarFiles                  < str*> : Name of jar files to load prior to execution []
exec.dontInitializeJars        < bool> : Skip initialization of jars [false]
exec.initializeJarsAfterDirCreation < bool> : Initialize from jars after copying them to a newly created execDir [false]
exec.makeThunk                 < bool> : Make a thunk (a delayed computation). [false]
exec.thunkAutoQueue            < bool> : A note to the servlet to automatically run the thunk when it sees it [false]
exec.thunkPriority             <  int> : Priority of the thunk. [0]
exec.thunkMainClassName        <  str> : Launch this class []
exec.thunkJavaOpts             <  str> : Java options to pass to Java when later running the thunk []
exec.thunkUseScala             < bool> : Use Scala to run rather than Java [false]
exec.thunkReqMemory            <  int> : Use Scala to run rather than Java (in MB) [1024]
exec.dontCatchExceptions       < bool> : Whether to catch exceptions (ignored when making a thunk) [false]
mcmc.alignmentInputFile        <  unk> :  []
mcmc.st                        < enum> :  [RNA] DNA|RNA|PROTEIN|PHONEMES|BINARY|REAL
mcmc.initTreeRandom            < rand> :  [1]
mcmc.computeLogZUsingSteppingStone < bool> :  [false]
phylo.prior                    < enum> :  [EXP] EXP|IMPROPER
phylo.rand                     < rand> :  [1]
phylo.nIteration               <  int> :  [1000]
phylo.logFrequency             <  int> :  [100]
phylo.nTreesPerFile            <  int> :  [100]
phylo.conditionAnneal          <  dbl> :  [0.01]
